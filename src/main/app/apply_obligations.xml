<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
xmlns:spring="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd"><smtp:gmail-connector name="Gmail" doc:name="Gmail"/>

    <http:request-config name="request_to_enrich" host="#[flowVars.enrichService.host]" port="#[flowVars.enrichService.port]" basePath="#[flowVars.enrichService.base]" doc:name="HTTP Request Configuration"/>    <sub-flow name="apply_obligations_sf">
        <logger message="APPLY OBLIGATIONS #[flowVars.applyObligations]" level="INFO" doc:name="Logger"/>
        <foreach collection="#[flowVars.applyObligations.Result.Obligations]" doc:name="For Each" rootMessageVariableName="obligation">
            <choice doc:name="Choice">
                <when expression="#[payload.Action == 'filter']">
                    <flow-ref name="apply_filter" doc:name="apply_filter"/>
                </when>
                <when expression="#[payload.Action == 'enrich']">
                    <flow-ref name="apply_enrich" doc:name="apply_enrich"/>
                </when>
                <when expression="#[payload.Action == 'log']">
                    <flow-ref name="apply_log" doc:name="apply_log"/>
                </when>
                <when expression="#[payload.Action == 'notify']">
                    <flow-ref name="apply_notify" doc:name="apply_notify"/>
                </when>
                <otherwise>
                    <logger message="Default Obligations, Fuck!!" level="INFO" doc:name="Default Obligation"/>
                </otherwise>
            </choice>
        </foreach>
        <logger message="This is the Result Array after apply obligations #[flowVars.resultArray]" level="INFO" doc:name="Logger"/>
    </sub-flow>
    <sub-flow name="apply_filter">
        <foreach collection="#[payload.Attributes]" counterVariableName="nestedCounter" rootMessageVariableName="nested" doc:name="For Each">
            <dw:transform-message doc:name="Transform Message">
                <dw:set-variable variableName="originalPayload"><![CDATA[%dw 1.0
%output application/xml
%namespace soapenv http://schemas.xmlsoap.org/soap/envelope/
---
{
	soapenv#Envelope:
		soapenv#Body: flowVars.originalPayload.soapenv#Envelope.soapenv#Body mapObject {
			Persona: $ - payload
	}
} when flowVars.originalPayload.soapenv#Envelope != null
otherwise
	flowVars.originalPayload mapObject {
		data: $ - payload
	}]]></dw:set-variable>
            </dw:transform-message>
        </foreach>
        <logger message="AFTER FILTER #[flowVars.originalPayload]" level="INFO" doc:name="Logger"/>
    </sub-flow>
    <sub-flow name="apply_notify">
        <logger message="Apply Notify!!" level="INFO" doc:name="Obligation Notify"/>
        <set-variable variableName="notifyEmail" value="#[payload.Attributes[0]]" mimeType="application/json" doc:name="Set Email"/>
        <set-variable variableName="notifySubject" value="#[payload.Attributes[2]]" doc:name="Set Subject"/>
        <set-payload value="#[sessionVars.from] #[payload.Attributes[1]]" encoding="UTF-8" mimeType="text/plain" doc:name="Set Payload"/>
        <!-- <smtp:outbound-endpoint host="${mail_host}" port="${mail_port}" user="${mail_host_user}" password="${mail_host_password}" connector-ref="Gmail" to="#[flowVars.notifyEmail]" subject="#[flowVars.notifySubject]" responseTimeout="10000" doc:name="SMTP"/> -->
    </sub-flow>
    <sub-flow name="apply_enrich">
        <dw:transform-message doc:name="Transform Message">
            <dw:set-variable variableName="enrichService"><![CDATA[%dw 1.0
%output application/java
---
{
	host: p("enrich_host"),
	port: p("enrich_port"),
	base: p("enrich_base_path"),
	action: p("enrich_action")
}
]]></dw:set-variable>
        </dw:transform-message>
        <http:request config-ref="request_to_enrich" path="#[flowVars.enrichService.action]" method="GET" doc:name="Enrich Data">
            <http:request-builder>
                <http:query-param paramName="id" value="46286492"/>
            </http:request-builder>
        </http:request>
        <json:json-to-xml-transformer doc:name="JSON to XML"/>
        <dw:transform-message doc:name="Transform Message">
            <dw:set-variable variableName="originalPayload"><![CDATA[%dw 1.0
%output application/xml
%namespace soapenv http://schemas.xmlsoap.org/soap/envelope/
%var myValue=payload.data.pais
---
{
	soapenv#Envelope:
		soapenv#Body: flowVars.originalPayload.soapenv#Envelope.soapenv#Body mapObject {
			Persona: $ ++ country:myValue
	}
} when flowVars.originalPayload.soapenv#Envelope != null
otherwise
	flowVars.originalPayload mapObject {
		data: $ ++ country:myValue
	}]]></dw:set-variable>
        </dw:transform-message>
    </sub-flow>
    <sub-flow name="apply_log">
        <logger message=":::LOG::: From #[sessionVars.from] To #[sessionVars.destination]" level="INFO" doc:name="Logger"/>
    </sub-flow>
</mule>
